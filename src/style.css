@import "tailwindcss";

/* Global font setup: use SF_Pro_Display everywhere, with safe fallbacks */
@layer base {
	/* If SF Pro Display is installed on the OS, use it via local();
		 You can also drop licensed .woff2 files into /public/fonts and extend src with url('/fonts/...'). */
	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display"),
			local("SF Pro Text"),
			local("SFProDisplay-Regular"),
			local("SFProText-Regular"),
			url("/fonts/SF-Pro-Display-Regular.otf") format("opentype");
		font-weight: 400;
		font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display Medium"),
			local("SF Pro Text Medium"),
			local("SFProDisplay-Medium"),
			local("SFProText-Medium"),
			url("/fonts/SF-Pro-Display-Medium.otf") format("opentype");
		font-weight: 500;
		font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display Semibold"),
			local("SF Pro Text Semibold"),
			local("SFProDisplay-Semibold"),
			local("SFProText-Semibold"),
			url("/fonts/SF-Pro-Display-Semibold.otf") format("opentype");
		font-weight: 600;
		font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display Bold"),
			local("SF Pro Text Bold"),
			local("SFProDisplay-Bold"),
			local("SFProText-Bold"),
			url("/fonts/SF-Pro-Display-Bold.otf") format("opentype");
		font-weight: 700;
		font-style: normal;
		font-display: swap;
	}

	/* Italic variants */
	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display Regular Italic"),
			local("SF Pro Text Regular Italic"),
			local("SFProDisplay-RegularItalic"),
			local("SFProText-RegularItalic"),
			url("/fonts/SF-Pro-Display-RegularItalic.otf") format("opentype");
		font-weight: 400;
		font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display Medium Italic"),
			local("SF Pro Text Medium Italic"),
			local("SFProDisplay-MediumItalic"),
			local("SFProText-MediumItalic"),
			url("/fonts/SF-Pro-Display-MediumItalic.otf") format("opentype");
		font-weight: 500;
		font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display Semibold Italic"),
			local("SF Pro Text Semibold Italic"),
			local("SFProDisplay-SemiboldItalic"),
			local("SFProText-SemiboldItalic"),
			url("/fonts/SF-Pro-Display-SemiboldItalic.otf") format("opentype");
		font-weight: 600;
		font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: "SF_Pro_Display";
		src:
			local("SF Pro Display Bold Italic"),
			local("SF Pro Text Bold Italic"),
			local("SFProDisplay-BoldItalic"),
			local("SFProText-BoldItalic"),
			url("/fonts/SF-Pro-Display-BoldItalic.otf") format("opentype");
		font-weight: 700;
		font-style: italic;
		font-display: swap;
	}

	:root {
		/* Make Tailwind's sans stack resolve to our desired font first */
		--font-sans: "SF_Pro_Display", ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto,
			Ubuntu, Cantarell, "Noto Sans", "Helvetica Neue", Arial, "Apple Color Emoji",
			"Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
	}

	  html, body, #root {
		font-family: "SF_Pro_Display", ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto,
			"Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
			/* Reserve gutter at the viewport level as well to keep fixed elements aligned across pages */
			scrollbar-gutter: stable both-edges;
			/* Make the app fill the viewport in Telegram; avoid mobile browser chrome collapsing issues */
			min-height: 100dvh;
			/* Respect safe areas on iOS/Android */
			padding-top: env(safe-area-inset-top);
			padding-bottom: env(safe-area-inset-bottom);
			padding-left: env(safe-area-inset-left);
			padding-right: env(safe-area-inset-right);
			background-color: #000; /* project background */
	}

		/* Prevent outer page scrolling; internal containers (like main) handle scroll */
		/* Disable outer document scrolling; the app container manages its own scroll */
		html, body { height: 100%; overflow: hidden; }

		/* Remove default user agent margin to avoid 8px gaps around the app */
		body { margin: 0; }

	/* Ensure controls inherit the app font */
	button, input, select, textarea {
		font: inherit;
	}

	/* Consistent box sizing */
	*, *::before, *::after { box-sizing: border-box; }

	/* Disable text size adjust and zooming behavior on mobile */
	html { -webkit-text-size-adjust: 100%; touch-action: manipulation; }
	body { overscroll-behavior: contain; }
}

/* Utilities */
@layer utilities {
	/* Hide scrollbar, but keep scrolling (Chrome/Safari/Edge/Opera) */
	.scrollbar-invisible::-webkit-scrollbar {
		width: 0;
		height: 0;
	}
	.scrollbar-invisible::-webkit-scrollbar-track {
		background: transparent;
	}
	.scrollbar-invisible::-webkit-scrollbar-thumb {
		background: transparent;
		border: none;
	}
	/* Firefox */
	.scrollbar-invisible {
		scrollbar-width: none; /* Firefox */
		-ms-overflow-style: none; /* IE 10+ */
	}

		/* Reserve scrollbar gutter space so layout doesn't shift when scrollbar toggles */
		.scrollbar-stable {
			scrollbar-gutter: stable both-edges;
		}

	/* Prevent iOS safari double-tap zoom on buttons/links by ensuring sensible tap-size */
	.tap-target { min-height: 44px; min-width: 44px; }

	/* Normalize inputs in Telegram: remove auto-zoom on focus by using 16px font size+ */
	input, textarea { font-size: 16px; }
}

/* Battle animations */
@keyframes fadeIn {
	from { opacity: 0; }
	to { opacity: 1; }
}

@keyframes slideUp {
	from { 
		opacity: 0; 
		transform: translateY(20px); 
	}
	to { 
		opacity: 1; 
		transform: translateY(0); 
	}
}

@keyframes spin {
	0% { transform: rotateY(0deg); }
	100% { transform: rotateY(1080deg); }
}
